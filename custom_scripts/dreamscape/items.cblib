# Implements dream items

$item_breezeband = ("minecraft:breeze_rod", {"minecraft:item_name": "Breeze Band","minecraft:item_model": "minecraft:breeze_rod", "minecraft:max_stack_size": 1})
$item_glideglove = ("minecraft:bee_spawn_egg", {"minecraft:item_name": "Glide Glove","minecraft:item_model": "minecraft:bee_spawn_egg", "minecraft:max_stack_size": 1})
$item_hosehook = ("minecraft:lead", {"minecraft:item_name": "Hose Hook","minecraft:item_model": "minecraft:lead", "minecraft:max_stack_size": 1})

# Each item is accessed via it's assigned id in the array
$ITEMS = [
    $item_breezeband,
    $item_glideglove,
    $item_hosehook,
]

macro $give_item($idx, $count)
    $item = $ITEMS[$idx]
    $mc_name = $item[0]
    $components = $item[1]
    /loot give @s loot {pools:[{rolls:1,entries:[{type:"minecraft:item",name:"$mc_name",functions:[{function:"minecraft:set_count",count:$count},{function:"minecraft:set_components",components:$components]}]}]}
end

reset
    # Creates dummy item_id and item_count
    @s.item_idx = 0
    @s.item_count = 1
end

# Technically called by item_select dialog
function give()
    # Store the idx and count NBT in the temp value per player
    /$scoreboard players set @s item_idx $(id)
    /$scoreboard players set @s item_count $(count)
    with
        $(count) = @s.item_count
    do
        switch @s.item_idx
            case $i in $range($len($ITEMS))
                $item = $ITEMS[$i]
                $mc_name = $item[0]
                $components = $item[1]
                /execute as @s run function $namespace:_give_item {id: $mc_name, count: $count, components: $components}
            end
        end
    end
end

# Helper function to actually give the item based on loot table
function _give_item()
    /$loot give @s loot {pools:[{rolls:1,entries:[{type:"minecraft:item",name:"$(id)",functions:[{function:"minecraft:set_count",count:$(count)},{function:"minecraft:set_components",components:$(components)}]}]}]}
end